
current-player {

  background: $black;
  width: 100%;
  display: block;
  .carousel {
    height: $avatar-size + 2 * $padding;
    position: relative;

    .masker {
      position: absolute;
      width: 100%;

      height: 100%;
      background: -moz-linear-gradient(left,    rgba($masker-color, 1) 0%, rgba($masker-color, 0) 20%, rgba($masker-color, 0) 80%, rgba($masker-color, 1) 100%);
      background: -webkit-linear-gradient(left, rgba($masker-color, 1) 0%, rgba($masker-color, 0) 20%, rgba($masker-color, 0) 80%, rgba($masker-color, 1) 100%);
      background: -o-linear-gradient(left,      rgba($masker-color, 1) 0%, rgba($masker-color, 0) 20%, rgba($masker-color, 0) 80%, rgba($masker-color, 1) 100%);
      background: -ms-linear-gradient(left,     rgba($masker-color, 1) 0%, rgba($masker-color, 0) 20%, rgba($masker-color, 0) 80%, rgba($masker-color, 1) 100%);
      background: linear-gradient(to right,     rgba($masker-color, 1) 0%, rgba($masker-color, 0) 20%, rgba($masker-color, 0) 80%, rgba($masker-color, 1) 100%);
      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#03ffffff', endColorstr='#00ffffff', GradientType=1);

      z-index: 1;
    }

    .player {
      position: absolute;
      top: 30px;

      .avatar {
        transition: opacity $animation-time;
        position: relative;
        left: -50%;
      }

      &.current {
        @include animation(enterCurrent $animation-time);
        left: 50%;
      }

      &.next {
        @include animation(enterNext $animation-time);
        left: 0;
        opacity: $carousel-opacity;
      }

      &.past {
        @include animation(enterPast $animation-time);
        opacity: $carousel-opacity;
        left: 100%;
        &.max {
          @include animation(enterPast $animation-time);
        }
      }

      &.out.dual {
        @include animation(enterOut $animation-time);
        left: -$avatar-size/2;
      }

      &.out:not(.dual) {
        @include animation(enterOutMultiple $animation-time);
        left: 100%;
        opacity: 0;
      }
    }
  }
}

@include keyframes(enterCurrent) {
  from {
    left: 100%;
    opacity: $carousel-opacity
  }
  to {
    left: 50%;
    opacity: 1
  }
}

@include keyframes(enterOut) {
  0% {
    opacity: 1;
    left: 50%;
  }
  99% {
    left: -$avatar-size/2;
    opacity: $carousel-opacity;
  }
}

@include keyframes(enterOutMultiple) {
  0% {
    left: 0;
  }
  100% {
    left: -50%;
  }
}

@include keyframes(enterPast) {
  0% {
    left: 150%;
  }
  100% {
    left: 100%
  }
}

@include keyframes(enterNext) {
  0% {
    left: 50%;
    opacity: 1;
  }
  100% {
    left: 0;
    opacity: $carousel-opacity;
  }
}